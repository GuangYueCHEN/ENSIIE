show_echan(30)
show_echan(100)
#cette fonction c'est pour representer les histgramme et calcule les moyennes et les variances , et faire la renormalisation
show_echan <-function (n){
echans<-matrix(rnorm(n*1000,1,2),nrow = n)
means=vector(length=1000)
vars=vector(length=1000)
for (i in 1:1000) {
means[i]=mean(echans[,i])
vars[i]=var(echans[,i])
}
str<-paste("les moyennes des echantillons",n)
hist(means,main = str,freq = FALSE)
myfun=function(x)(sum(x-1)/n)
means2=apply(echans,2,myfun)
#apres faire la renormalisation
myfun=function(x)((x-1)/2/sqrt(n))
vars2=sapply(means2,myfun)
#means2=scale(means, center=T,scale=T)
#vars2=scale(vars, center=T,scale=T)
myfun=function(x)(sum(x)/n)
str<-paste("les moyennes scalaires  des echantillons 'U'",n)
hist(means2,main = str,freq = FALSE)
data<-data.frame(Moyenne=means,Umeans=means2,Variance=vars,UVariance=vars2)
print(data)
}
show_echan(5)
show_echan(30)
show_echan(100)
show_echan_de_Poisson <-function (n){
echans<-matrix(rpois(n*1000,3),nrow = n)
means=vector(length=1000)
vars=vector(length=1000)
for (i in 1:1000) {
means[i]=mean(echans[,i])
vars[i]=var(echans[,i])
}
str<-paste("les moyennes des echantillons",n)
hist(means,main = str,freq = FALSE)
myfun=function(x)(sum(x-3)/n)
means2=apply(echans,2,myfun)
#apres faire la renormalisation
myfun=function(x)((x-3)/2/sqrt(n))
vars2=sapply(means2,myfun)
#means2=scale(means, center=T,scale=T)
#vars2=scale(vars, center=T,scale=T)
myfun=function(x)(sum(x)/n)
str<-paste("les moyennes scalaires  des echantillons 'U'",n)
hist(means2,main = str,freq = FALSE)
data<-data.frame(Moyenne=means,Umeans=means2,Variance=vars,UVariance=vars2)
print(data)
}
show_echan_de_Poisson(5)
show_echan_de_Poisson(30)
show_echan_de_Poisson(100)
#cette fonction c'est pour representer les histgramme et calcule les moyennes et les variances , et faire la renormalisation
show_echan <-function (n){
echans<-matrix(rnorm(n*1000,1,2),nrow = n)
means=vector(length=1000)
vars=vector(length=1000)
for (i in 1:1000) {
means[i]=mean(echans[,i])
vars[i]=var(echans[,i])
}
str<-paste("les moyennes des echantillons",n)
hist(means,main = str,freq = FALSE)
myfun=function(x)((x-1)/(2/sqrt(n)))
means2=apply(echans,2,myfun)
#apres faire la renormalisation
#means2=scale(means, center=T,scale=T)
#vars2=scale(vars, center=T,scale=T)
myfun=function(x)(sum(x)/n)
str<-paste("les moyennes scalaires  des echantillons 'U'",n)
hist(means2,main = str,freq = FALSE)
data<-data.frame(Moyenne=means,Umeans=means2,Variance=vars)
print(data)
}
show_echan(5)
show_echan(30)
#cette fonction c'est pour representer les histgramme et calcule les moyennes et les variances , et faire la renormalisation
show_echan <-function (n){
echans<-matrix(rnorm(n*1000,1,2),nrow = n)
means=vector(length=1000)
vars=vector(length=1000)
for (i in 1:1000) {
means[i]=mean(echans[,i])
vars[i]=var(echans[,i])
}
str<-paste("les moyennes des echantillons",n)
hist(means,main = str,freq = FALSE)
#apres faire la renormalisation
myfun=function(x)((x-1)/(2/sqrt(n)))
means2=sapply(means2,myfun)
#means2=scale(means, center=T,scale=T)
#vars2=scale(vars, center=T,scale=T)
myfun=function(x)(sum(x)/n)
str<-paste("les moyennes scalaires  des echantillons 'U'",n)
hist(means2,main = str,freq = FALSE)
data<-data.frame(Moyenne=means,Umeans=means2,Variance=vars)
print(data)
}
show_echan(5)
#cette fonction c'est pour representer les histgramme et calcule les moyennes et les variances , et faire la renormalisation
show_echan <-function (n){
echans<-matrix(rnorm(n*1000,1,2),nrow = n)
means=vector(length=1000)
vars=vector(length=1000)
for (i in 1:1000) {
means[i]=mean(echans[,i])
vars[i]=var(echans[,i])
}
str<-paste("les moyennes des echantillons",n)
hist(means,main = str,freq = FALSE)
#apres faire la renormalisation
myfun=function(x)((x-1)/(2/sqrt(n)))
means2=sapply(means,myfun)
#means2=scale(means, center=T,scale=T)
#vars2=scale(vars, center=T,scale=T)
myfun=function(x)(sum(x)/n)
str<-paste("les moyennes scalaires  des echantillons 'U'",n)
hist(means2,main = str,freq = FALSE)
data<-data.frame(Moyenne=means,Umeans=means2,Variance=vars)
print(data)
}
show_echan(5)
show_echan(30)
show_echan(100)
show_echan_de_Poisson <-function (n){
echans<-matrix(rpois(n*1000,3),nrow = n)
means=vector(length=1000)
vars=vector(length=1000)
for (i in 1:1000) {
means[i]=mean(echans[,i])
vars[i]=var(echans[,i])
}
str<-paste("les moyennes des echantillons",n)
hist(means,main = str,freq = FALSE)
#apres faire la renormalisation
myfun=function(x)((x-1)/(2/sqrt(n)))
means2=sapply(means,myfun)
#means2=scale(means, center=T,scale=T)
#vars2=scale(vars, center=T,scale=T)
myfun=function(x)(sum(x)/n)
str<-paste("les moyennes scalaires  des echantillons 'U'",n)
hist(means2,main = str,freq = FALSE)
data<-data.frame(Moyenne=means,Umeans=means2,Variance=vars,UVariance=vars2)
print(data)
}
show_echan_de_Poisson(5)
show_echan_de_Poisson <-function (n){
echans<-matrix(rpois(n*1000,3),nrow = n)
means=vector(length=1000)
vars=vector(length=1000)
for (i in 1:1000) {
means[i]=mean(echans[,i])
vars[i]=var(echans[,i])
}
str<-paste("les moyennes des echantillons",n)
hist(means,main = str,freq = FALSE)
#apres faire la renormalisation
myfun=function(x)((x-1)/(2/sqrt(n)))
means2=sapply(means,myfun)
#means2=scale(means, center=T,scale=T)
#vars2=scale(vars, center=T,scale=T)
myfun=function(x)(sum(x)/n)
str<-paste("les moyennes scalaires  des echantillons 'U'",n)
hist(means2,main = str,freq = FALSE)
data<-data.frame(Moyenne=means,Umeans=means2,Variance=vars)
print(data)
}
show_echan_de_Poisson(5)
show_echan_de_Poisson(30)
show_echan_de_Poisson(100)
help(gprnd)
help(rpareto)
install.packages(c("VGAM","rmutils"))
library(rmutils)
install.packages(c("VGAM","rmutils"))
library(VGAM)
library(rmutils)
library(MASS)
library(actuar)
library(fitdistrplus)
#install.packages(c("VGAM","rmutils"))
library(rmutils)
library(rÃ¹utils)
estimation <-function (n,a,b){
echans<-matrix(rnorm(n*n,a,b),nrow = n)
means=vector(length=n)
vars=vector(length=n)
count=0
for (i in 1:n) {
means[i]=mean(echans[,i])
if(means[i]-a>b||means[i]-a<b){
count++
}
estimation <-function (n,a,b){
echans<-matrix(rnorm(n*n,a,b),nrow = n)
means=vector(length=n)
vars=vector(length=n)
count=0
for (i in 1:n) {
means[i]=mean(echans[,i])
if(means[i]-a>b||means[i]-a<b)
{count++}
estimation <-function (n,a,b){
echans<-matrix(rnorm(n*n,a,b),nrow = n)
means=vector(length=n)
vars=vector(length=n)
count=0
for (i in 1:n) {
means[i]=mean(echans[,i])
if(means[i]-a>b||means[i]-a<b)
{count++;}
estimation <-function (n,a,b){
echans<-matrix(rnorm(n*n,a,b),nrow = n)
means=vector(length=n)
vars=vector(length=n)
count=0
for (i in 1:n) {
means[i]=mean(echans[,i])
if(means[i]-a>b||means[i]-a<b){count++}
estimation <-function (n,a,b){
echans<-matrix(rnorm(n*n,a,b),nrow = n)
means=vector(length=n)
vars=vector(length=n)
count=0
for (i in 1:n) {
means[i]=mean(echans[,i])
if(means[i]-a>b||means[i]-a<b) count++
}
estimation <-function (n,a,b){
echans<-matrix(rnorm(n*n,a,b),nrow = n)
means=vector(length=n)
vars=vector(length=n)
count=0
for (i in 1:n) {
means[i]=mean(echans[,i])
if(means[i]-a>b||means[i]-a<b) count<-count+1
}
P<-count/n
}
estimation <-function (n,a,b){
echans<-matrix(rnorm(n*n,a,b),nrow = n)
means=vector(length=n)
vars=vector(length=n)
count=0
for (i in 1:n) {
means[i]=mean(echans[,i])
if(means[i]-a>b||means[i]-a<b) count<-count+1
}
P<-count/n
}
P<-estimation(1000,1,2)
estimation <-function (n,a,b){
echans<-matrix(rnorm(n*n,a,b),nrow = n)
means=vector(length=n)
vars=vector(length=n)
count=0
for (i in 1:n) {
means[i]=mean(echans[,i])
if(means[i]-a>b||means[i]-a<-b) count<-count+1
}
P<-count/n
}
P<-estimation(1000,1,2)
estimation <-function (n,a,b){
echans<-matrix(rnorm(n*n,a,b),nrow = n)
means=vector(length=n)
vars=vector(length=n)
count=0
for (i in 1:n) {
means[i]=mean(echans[,i])
if(means[i]-a>b||means[i]-a<(-b)) count<-count+1
}
P<-count/n
}
P<-estimation(1000,1,2)
estimation <-function (n,a,b){
echans<-matrix(rnorm(n*n,a,b),nrow = n)
means=vector(length=n)
vars=vector(length=n)
count=0
for (i in 1:n) {
means[i]=mean(echans[,i])
if(abs(means[i]-a)>=b) count<-count+1
}
P<-count/n
}
P<-estimation(1000,1,2)
estimation <-function (n,a,b){
echans<-matrix(rnorm(n*n,a,b),nrow = n)
means=vector(length=n)
vars=vector(length=n)
count=0
for (i in 1:n) {
means[i]=mean(echans[,i])
if(abs(means[i]-a)>=b) count<-count+1
}
P<-count
}
P<-estimation(1000,1,2)
estimation <-function (n,a,b){
echans<-matrix(rnorm(n*n,a,b),nrow = n)
means=vector(length=n)
vars=vector(length=n)
count=0
for (i in 1:n) {
means[i]=mean(echans[,i])
if(abs(means[i]-a)>=b)  count<-count+1 else
}
estimation <-function (n,a,b){
echans<-matrix(rnorm(n*n,a,b),nrow = n)
means=vector(length=n)
vars=vector(length=n)
count=0
for (i in 1:n) {
means[i]=mean(echans[,i])
}
myfonc=function(x)(abs(x)-a)
sapply(means,myfonc)
}
P<-estimation(1000,1,2)
estimation <-function (n,a,b){
echans<-matrix(rnorm(n*n,a,b),nrow = n)
means=vector(length=n)
vars=vector(length=n)
count=0
for (i in 1:n) {
means[i]=mean(echans[,i])
}
myfonc=function(x)(abs(x-a))
means<-sapply(means,myfonc)
y=which(means>b)
}
P<-estimation(1000,1,2)
estimation <-function (n,a,b){
echans<-matrix(rnorm(n*n,a,b),nrow = n)
means=vector(length=n)
vars=vector(length=n)
count=0
for (i in 1:n) {
means[i]=mean(echans[,i])
}
myfonc=function(x)(abs(x-a))
means<-sapply(means,myfonc)
y=which(means<b)
}
P<-estimation(1000,1,2)
estimation <-function (n,a,b){
echans<-matrix(rnorm(n*n,a,b),nrow = n)
means=vector(length=n)
vars=vector(length=n)
count=0
for (i in 1:n) {
means[i]=mean(echans[,i])
}
myfonc=function(x)(abs(x-a))
means<-sapply(means,myfonc)
y=which(means<b)
}
P<-estimation(1000,1,2)
estimation <-function (n,a,b){
echans<-matrix(rnorm(n*n,a,b),nrow = n)
means=vector(length=n)
vars=vector(length=n)
count=0
for (i in 1:n) {
means[i]=mean(echans[,i])
}
myfonc=function(x)(abs(x-a))
means<-sapply(means,myfonc)
y=which(means>=b)
}
P<-estimation(1000,1,2)
estimation <-function (n,a,b){
echans<-matrix(rnorm(n*n,a,b),nrow = n)
means=vector(length=n)
vars=vector(length=n)
count=0
for (i in 1:n) {
means[i]=mean(echans[,i])
}
myfonc=function(x)(abs(x-a))
means<-sapply(means,myfonc)
y=sum(means>=b)
}
P<-estimation(1000,1,2)
p
P
estimation_norm <-function (n,a,b){
echans<-matrix(rnorm(n*n,a,b),nrow = n)
means=vector(length=n)
vars=vector(length=n)
count=0
for (i in 1:n) {
means[i]=mean(echans[,i])
}
myfonc=function(x)(abs(x-a))
means<-sapply(means,myfonc)
y=sum(means>=b)
}
P<-estimation_norm(1000,1,2)
estimation_poisson <-function (n,a,b){
echans<-matrix(rpois(n*n,a,b),nrow = n)
means=vector(length=n)
vars=vector(length=n)
count=0
for (i in 1:n) {
means[i]=mean(echans[,i])
}
myfonc=function(x)(abs(x-a))
means<-sapply(means,myfonc)
y=sum(means>=b)
}
P2<-estimation_poisson(1000,1,2)
show_echan_de_Poisson <-function (n){
echans<-matrix(rpois(n*1000,3),nrow = n)
means=vector(length=1000)
vars=vector(length=1000)
for (i in 1:1000) {
means[i]=mean(echans[,i])
vars[i]=var(echans[,i])
}
str<-paste("les moyennes des echantillons",n)
hist(means,main = str,freq = FALSE)
#apres faire la renormalisation
myfun=function(x)((x-3)/(3/sqrt(n)))
means2=sapply(means,myfun)
#means2=scale(means, center=T,scale=T)
str<-paste("les moyennes scalaires  des echantillons 'U'",n)
hist(means2,main = str,freq = FALSE)
data<-data.frame(Moyenne=means,Umeans=means2,Variance=vars)
print(data)
}
show_echan_de_Poisson(5)
show_echan_de_Poisson(30)
show_echan_de_Poisson(100)
estimation_norm <-function (n,a,b){
echans<-matrix(rnorm(n*n,a,b),nrow = n)
means=vector(length=n)
vars=vector(length=n)
count=0
for (i in 1:n) {
means[i]=mean(echans[,i])
}
myfonc=function(x)(abs(x-a))
means<-sapply(means,myfonc)
y=sum(means>=b)
}
P<-estimation_norm(1000,1,2)
estimation_poisson <-function (n,b){
echans<-matrix(rpois(n*n,b),nrow = n)
means=vector(length=n)
vars=vector(length=n)
count=0
for (i in 1:n) {
means[i]=mean(echans[,i])
}
myfonc=function(x)(abs(x-b))
means<-sapply(means,myfonc)
y=sum(means>=b)
}
P2<-estimation_poisson(1000,2)
estimation_norm <-function (n,a,b){
echans<-matrix(rnorm(n*n,a,b),nrow = n)
means=vector(length=n)
vars=vector(length=n)
count=0
for (i in 1:n) {
means[i]=mean(echans[,i])
}
myfonc=function(x)(abs(x-a))
means<-sapply(means,myfonc)
y=sum(means>=b)
}
P<-estimation_norm(1000,1,2)
estimation_poisson <-function (n,b){
echans<-matrix(rpois(n*n,b),nrow = n)
means=vector(length=n)
vars=vector(length=n)
count=0
for (i in 1:n) {
means[i]=mean(echans[,i])
}
myfonc=function(x)(abs(x-b))
means<-sapply(means,myfonc)
y=sum(means>=sqrt(b))
}
P2<-estimation_poisson(1000,2)
show_echan_de_Poisson <-function (n){
echans<-matrix(rpois(n*1000,3),nrow = n)
means=vector(length=1000)
vars=vector(length=1000)
for (i in 1:1000) {
means[i]=mean(echans[,i])
vars[i]=var(echans[,i])
}
str<-paste("les moyennes des echantillons",n)
hist(means,main = str,freq = FALSE)
#apres faire la renormalisation
myfun=function(x)((x-3)/(sqrt(3)/sqrt(n)))
means2=sapply(means,myfun)
#means2=scale(means, center=T,scale=T)
str<-paste("les moyennes scalaires  des echantillons 'U'",n)
hist(means2,main = str,freq = FALSE)
data<-data.frame(Moyenne=means,Umeans=means2,Variance=vars)
print(data)
}
show_echan_de_Poisson(5)
show_echan_de_Poisson(30)
show_echan_de_Poisson(100)
