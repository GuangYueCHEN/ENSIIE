# 1-7-1
3.86E-2
# 2-5-3
0 0
0 5
# 3-6-2
void communicating_classes_algorithm(int n, float** transitions, int* comclasses){
int def=1;
int i,j,k;


int *b;
b=(int*)malloc(n*sizeof(int));

for(i=0;i<n;i++){
	comclasses[i]=i+1;
	b[i]=comclasses[i];
}





while(def!=0){

	def=0;
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){

			if(transitions[i][j]>0){
					
				
				for(k=0;k<n;k++){
					transitions[i][k]=transitions[i][k]+transitions[j][k];
				
				}
			}
		}

	}



	for(i=0;i<n;i++){
		for(j=0;j<n;j++){

			if(transitions[i][j]>0&&transitions[j][i]>0){
				comclasses[j]=comclasses[i];
			}

	}

	}



for(i=0;i<n;i++){

	if((b[i]-comclasses[i])>0){
	def+=b[i]-comclasses[i];
	}
	else{
		def+= comclasses[i]-b[i];
	}

	b[i]=comclasses[i];


}






}



free(b);

}