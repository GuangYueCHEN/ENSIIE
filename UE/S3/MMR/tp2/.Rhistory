help(lars)
Y=as.matrix(BostonHousing$medv)
X=as.matrix(subset(BostonHousing,select=-medv))
modlasso=lars(x=X,y=Y,type="lasso")
View(X)
Y=as.matrix(BostonHousing$medv)
X=as.numeric(as.matrix(subset(BostonHousing,select=-medv))ï¼‰
Y=as.matrix(BostonHousing$medv)
X=as.numeric(as.matrix(subset(BostonHousing,select=-medv)))
modlasso=lars(x=X,y=Y,type="lasso")
Y=as.matrix(BostonHousing$medv)
as.matrix(BostonHousing)
modlasso=lars(x=X,y=Y,type="lasso")
Y<-as.matrix(BostonHousing$medv)
X<-as.matrix(BostonHousing)
modlasso=lars(x=X,y=Y,type="lasso")
Y<-as.matrix(BostonHousing$medv)
X<-as.matrix(X=as.numeric(BostonHousing))
Y=as.matrix(BostonHousing$medv)
as.matrix(subset(BostonHousing,select=-medv))
modlasso=lars(x=X,y=Y,type="lasso")
View(BostonHousing)
Y<-as.matrix(BostonHousing$medv)
subset(BostonHousing,select=-medv)
X<-subset(BostonHousing,select=-medv)
modlasso=lars(x=X,y=Y,type="lasso")
View(X)
Y<-as.matrix(BostonHousing$medv)
X<-as.matrix(subset(BostonHousing,select=-medv))
modlasso=lars(x=X,y=Y,type="lasso")
Y<-as.matrix(BostonHousing$medv)
X<-apply(as.matrix(subset(BostonHousing,select=-medv)),2,as.numeric)
modlasso=lars(x=X,y=Y,type="lasso")
plot(modlasso)
plot(modlasso$lambda)
Y<-as.matrix(BostonHousing$medv)
X<-apply(as.matrix(subset(BostonHousing,select=-medv)),2,as.numeric)
modlasso=lars(x=X,y=Y,type="lasso")
plot(modlasso)
plot(modlasso$lambda)
modlasso$lambda[which.min(modlasso$RSS)]
Y<-as.matrix(BostonHousing$medv)
X<-apply(as.matrix(subset(BostonHousing,select=-medv)),2,as.numeric)
modlasso=lars(x=X,y=Y,type="lasso")
plot(modlasso)
plot(modlasso$lambda)
modlasso$RSS
Y<-as.matrix(BostonHousing$medv)
X<-apply(as.matrix(subset(BostonHousing,select=-medv)),2,as.numeric)
modlasso=lars(x=X,y=Y,type="lasso")
plot(modlasso)
plot(modlasso$lambda)
which.min(modlasso$RSS)
Y<-as.matrix(BostonHousing$medv)
X<-apply(as.matrix(subset(BostonHousing,select=-medv)),2,as.numeric)
modlasso=lars(x=X,y=Y,type="lasso")
plot(modlasso)
plot(modlasso$lambda)
modlasso$RSS
which.min(modlasso$RSS)
help(which.min)
Y<-as.matrix(BostonHousing$medv)
X<-apply(as.matrix(subset(BostonHousing,select=-medv)),2,as.numeric)
modlasso=lars(x=X,y=Y,type="lasso")
plot(modlasso)
plot(modlasso$lambda)
modlasso$lambda[which.min(modlasso$RSS)]
Y<-as.matrix(BostonHousing$medv)
X<-apply(as.matrix(subset(BostonHousing,select=-medv)),2,as.numeric)
modlasso=lars(x=X,y=Y,type="lasso")
plot(modlasso)
plot(modlasso$lambda)
modlasso$lambda[which.min(modlasso$RSS)-1]
Y<-as.matrix(BostonHousing$medv)
X<-apply(as.matrix(subset(BostonHousing,select=-medv)),2,as.numeric)
modlasso=lars(x=X,y=Y,type="lasso")
plot(modlasso)
plot(modlasso$lambda)
modlasso$lambda
modlasso$lambda[which.min(modlasso$RSS)-1]
Y<-as.matrix(BostonHousing$medv)
X<-apply(as.matrix(subset(BostonHousing,select=-medv)),2,as.numeric)
modlasso=lars(x=X,y=Y,type="lasso")
plot(modlasso)
plot(modlasso$lambda)
modlasso$lambda[which.min(modlasso$RSS)-1]
help(lars)
Y_esti<-predict.lars(modlasso,X,type="fit",mode="lambda",s=0.0996448)
predict.lars(modlasso,X,type="fit",mode="lambda",s=0.0996448)
Y_esti<-predict.lars(modlasso,X,type="fit",mode="lambda",s=0.0996448)
Y_esti<-Y_esti$fit
Y_esti<-predict.lars(modlasso,X,type="fit",mode="lambda",s=0.0996448)
Y_esti<-Y_esti$fit
data.frame(Y_esti,Y)
Y_esti<-predict.lars(modlasso,X,type="fit",mode="lambda",s=0.06)
Y_esti<-Y_esti$fit
data.frame(Y_esti,Y)
Y_esti<-predict.lars(modlasso,X,type="fit",mode="lambda",s=16)
Y_esti<-Y_esti$fit
data.frame(Y_esti,Y)
Y_esti<-predict.lars(modlasso,X,type="fit",mode="lambda",s=15)
Y_esti<-Y_esti$fit
data.frame(Y_esti,Y)
help("predict.lars")
Y_esti<-predict.lars(modlasso,X,type="fit",mode="lambda")
Y_esti<-Y_esti$fit
data.frame(Y_esti,Y)
modlasso$lambda[which.min(modlasso$RSS)-1]
min(modlasso$RSS)
modlasso$lambda[which.min(modlasso$RSS)-1]
min(modlasso$RSS)
modlasso$lambda[which.min(modlasso$RSS)-1]
min(modlasso$RSS)/506
modlasso$lambda[which.min(modlasso$RSS)-1]
min(modlasso$RSS)/length(Y)
View(modlasso)
Y_esti<-predict.lars(modlasso,X,type="fit",mode="lambda",s=1)
Y_esti<-Y_esti$fit
data.frame(Y_esti,Y)
Y_esti<-predict.lars(modlasso,X,type="fit",mode="lambda",s=16)
Y_esti<-Y_esti$fit
data.frame(Y_esti,Y)
Y_esti<-predict.lars(modlasso,X,type="coefficient",mode="lambda",s=0.0996448)
#Y_esti<-Y_esti$fit
data.frame(Y_esti,Y)
Y_esti<-predict.lars(modlasso,X,type="coefficient",mode="lambda",s=0.0996448)
#Y_esti<-Y_esti$fit
#data.frame(Y_esti,Y)
Y_esti
coef<-predict.lars(modlasso,X,type="coefficient",mode="lambda",s=0.0996448)
coef$coefficients
#Y_esti<-Y_esti$fit
#data.frame(Y_esti,Y)
coef=predict.lars(modlasso,X,type="coefficients",mode="lambda",s=0)
coef2=predict.lars(modlasso,X,type="coefficients",mode="lambda",s=100)
View(coef2)
View(coef)
coef<-predict.lars(modlasso,X,type="coefficient",mode="lambda",s=100)
coef$coefficients
#Y_esti<-Y_esti$fit
#data.frame(Y_esti,Y)
reg = lm(formula(regbackward), data = BostonHousing)
summary(reg)
Y_esti<-predict(reg,BostonHousing)
reg = lm(formula(regbackward), data = BostonHousing)
summary(reg)
Y_esti<-predict(reg,BostonHousing)
RMSE<-function(Y,Y_esti){
sum=0
for(i in seq(1,length(Y))){
sum<-sum+(Y_esti[i]-Y[i])^2
}
RMSE<- sqrt(sum/length(Y))
return(RMSE)
}
RMSE(Y,Y_esti)
coef<-predict.lars(modlasso,X,type="coefficient",mode="lambda",s=0.0996448)
coef$coefficients
Y_esti<-predict.lars(modlasso,X,type="fit",mode="lambda",s=0.0996448)
Y_esti<-Y_esti$fit
#data.frame(Y_esti,Y)
RMSE(Y,Y_esti)
reg = lm(formula(regbackward), data = BostonHousing)
summary(reg)
Y_esti<-predict(reg,BostonHousing)
RMSE<-function(Y,Y_esti){
sum=0
for(i in seq(1,length(Y))){
sum<-sum+(Y_esti[i]-Y[i])^2
}
RMSE<- sqrt(sum/(length(Y)-13))
return(RMSE)
}
RMSE(Y,Y_esti)
reg = lm(formula(regbackward), data = BostonHousing)
summary(reg)
Y_esti<-predict(reg,BostonHousing)
RMSE<-function(Y,Y_esti){
sum=0
for(i in seq(1,length(Y))){
sum<-sum+(Y_esti[i]-Y[i])^2
}
RMSE<- sqrt(sum/(length(Y)-12))
return(RMSE)
}
RMSE(Y,Y_esti)
View(X)
reg = lm(formula(regbackward), data = BostonHousing)
summary(reg)
Y_esti<-predict(reg,BostonHousing)
Non_biased_residual<-function(Y,Y_esti,p){
sum=0
for(i in seq(1,length(Y))){
sum<-sum+(Y_esti[i]-Y[i])^2
}
NBR<- sqrt(sum/(length(Y)-p))
return(NBR)
}
Non_biased_residual(Y,Y_esti,13)
reg = lm(formula(regbackward), data = BostonHousing)
summary(reg)
Y_esti<-predict(reg,BostonHousing)
Non_biased_residual<-function(Y,Y_esti,p){
sum=0
for(i in seq(1,length(Y))){
sum<-sum+(Y_esti[i]-Y[i])^2
}
NBR<- sqrt(sum/(length(Y)-p+1))
return(NBR)
}
Non_biased_residual(Y,Y_esti,13)
coef<-predict.lars(modlasso,X,type="coefficient",mode="lambda",s=0.0996448)
coef$coefficients
Y_esti<-predict.lars(modlasso,X,type="fit",mode="lambda",s=0.0996448)
Y_esti<-Y_esti$fit
#data.frame(Y_esti,Y)
Non_biased_residual(Y,Y_esti,13)
modlasso$lambda[which.min(modlasso$RSS)-1]
modlasso$RSS
modlasso$lambda[which.min(modlasso$RSS)-1]
modlasso$RSS/494
coef<-predict.lars(modlasso,X,type="coefficient",mode="lambda",s=0.0996448)
coef$coefficients
Y_esti<-predict.lars(modlasso,X,type="fit",mode="lambda",s=0.0996448)
Y_esti<-Y_esti$fit
#data.frame(Y_esti,Y)
print("residual standard error")
Non_biased_residual(Y,Y_esti,13)
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=seq(0,10,0.01))
plot(modridge)
modridge$lambda[which.min(modridge$GCV)]
plot(modridge$GCV)
#
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=seq(0,10,0.01))
plot(modridge)
lambda<-modridge$lambda[which.min(modridge$GCV)]
plot(modridge$GCV)
#
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=seq(0,10,0.01))
plot(modridge)
lambda<-modridge$lambda[which.min(modridge$GCV)]
plot(modridge$GCV)
modridge<-lm.ridge(EN.ATM.CO2E.KT~.,data=tab,lambda=modridge$lambda[which.min(modridge$GCV)])
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=seq(0,10,0.01))
plot(modridge)
lambda<-modridge$lambda[which.min(modridge$GCV)]
plot(modridge$GCV)
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=modridge$lambda[which.min(modridge$GCV)])
coef<-coef(modridge)
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=seq(0,10,0.01))
plot(modridge)
lambda<-modridge$lambda[which.min(modridge$GCV)]
plot(modridge$GCV)
lambda
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=lambda)
coef<-coef(modridge)
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=seq(0,10,0.01))
plot(modridge)
lambda<-modridge$lambda[which.min(modridge$GCV)]
plot(x=seq(0,10,0.01),modridge$GCV)
lambda
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=lambda)
coef<-coef(modridge)
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=seq(0,10,0.01))
plot(modridge)
lambda<-modridge$lambda[which.min(modridge$GCV)]
plot(x=seq(0,10,0.01),modridge$GCV,xlab = "lambda")
lambda
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=lambda)
coef<-coef(modridge)
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=seq(0,10,0.01))
plot(modridge)
lambda<-modridge$lambda[which.min(modridge$GCV)]
plot(x=seq(0,10,0.01),modridge$GCV,xlab = "lambda")
abline(y=lambda)
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=lambda)
coef<-coef(modridge)
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=seq(0,10,0.01))
plot(modridge)
lambda<-modridge$lambda[which.min(modridge$GCV)]
plot(x=seq(0,10,0.01),modridge$GCV,xlab = "lambda")
abline(x=lambda)
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=lambda)
coef<-coef(modridge)
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=seq(0,10,0.01))
plot(modridge)
lambda<-modridge$lambda[which.min(modridge$GCV)]
plot(x=seq(0,10,0.01),modridge$GCV,xlab = "lambda")
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=lambda)
coef<-coef(modridge)
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=seq(0,10,0.01))
plot(modridge)
abline(x=lambda)
lambda<-modridge$lambda[which.min(modridge$GCV)]
plot(x=seq(0,10,0.01),modridge$GCV,xlab = "lambda")
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=lambda)
coef<-coef(modridge)
help(abline)
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=seq(0,10,0.01))
plot(modridge)
abline(v=lambda)
lambda<-modridge$lambda[which.min(modridge$GCV)]
plot(x=seq(0,10,0.01),modridge$GCV,xlab = "lambda")
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=lambda)
coef<-coef(modridge)
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=seq(0,10,0.01))
plot(modridge)
abline(v=lambda)
lambda<-modridge$lambda[which.min(modridge$GCV)]
plot(x=seq(0,10,0.01),modridge$GCV,xlab = "lambda")
abline(v=lambda)
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=lambda)
coef<-coef(modridge)
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=seq(0,10,0.01))
plot(modridge)
abline(v=lambda)
lambda<-modridge$lambda[which.min(modridge$GCV)]
plot(x=seq(0,10,0.01),modridge$GCV,xlab = "lambda")
abline(v=lambda,untf=TRUE)
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=lambda)
coef<-coef(modridge)
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=lambda)
coef<-coef(modridge)
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=lambda)
coef<-coef(modridge)
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=lambda)
coef<-coef(modridge)
coef
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=lambda)
coef<-coef(modridge)
coef
Y_esti<-X%*%as.vector(coef)
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=lambda)
coef<-coef(modridge)
coef
Y_esti<-as.matrix(BostonHousing)%*%as.vector(coef)
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=lambda)
coef<-coef(modridge)
coef
Y_esti<-as.matrix(apply(BostonHousing,2,as.numeric))%*%as.vector(coef)
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=lambda)
coef<-coef(modridge)
coef
Y_esti<-as.matrix(apply(BostonHousing,2,as.numeric))%*%as.vector(coef)
Non_biased_residual(Y,Y_esti,13)
modridge<-lm.ridge(medv~.,data=X,lambda=lambda)
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=lambda)
coef<-coef(modridge)
coef
Y_esti<-as.matrix(apply(BostonHousing,2,as.numeric))%*%as.vector(coef)
Non_biased_residual(Y,Y_esti,13)
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=lambda)
coef<-coef(modridge)
coef
predict(modridge,BostonHousing)
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=lambda)
coef<-coef(modridge)
coef
un<-vector(1,length=length(Y))
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=lambda)
coef<-coef(modridge)
coef
un<-matrix(1,nrow=length=length(Y),ncol=1)
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=lambda)
coef<-coef(modridge)
coef
un<-matrix(1,nrow=length(Y),ncol=1)
Y_esti<-cbind(un,X)%*%as.vector(coef)
Non_biased_residual(Y,Y_esti,13)
smp1<-sample(nrow(BostonHousing), nrow(BostonHousing)*0.75)
train_data=BostonHousing[smp1,]
test_data=BostonHousing[-smp1,]
help("predict")
modreg<-lm(medv~.,train_data)
regbackward = step(modreg, direction = 'backward')
reg = lm(formula(regbackward), data = train_data)
Y_esti<-predict(reg,newdata=test_data)
Y<-test_data$medv
Non_biased_residual(Y,Y_esti,13)
Non_biased_residual(Y,Y_esti,13)
Non_biased_residual(Y,Y_esti,13)
Y_esti<-predict(reg,newdata=test_data)
Y<-test_data$medv
Non_biased_residual(Y,Y_esti,13)
Y<-as.matrix(train_data$medv)
X<-apply(as.matrix(subset(train_data,select=-medv)),2,as.numeric)
modlasso=lars(x=X,y=Y,type="lasso")
Y<-as.matrix(train_data$medv)
X<-apply(as.matrix(subset(train_data,select=-medv)),2,as.numeric)
modlasso=lars(x=X,y=Y,type="lasso")
Y_esti<-predict.lars(modlasso,X,newdata=test_data,type="fit",mode="lambda",s=modlasso$lambda[which.min(modlasso$RSS)-1])
Y_esti<-Y_esti$fit
Y<-as.matrix(train_data$medv)
X<-apply(as.matrix(subset(train_data,select=-medv)),2,as.numeric)
modlasso=lars(x=X,y=Y,type="lasso")
Y_esti<-predict.lars(modlasso,X,newdata=test_data,type="fit",mode="lambda",s=modlasso$lambda[which.min(modlasso$RSS)-1])
Y_esti<-Y_esti$fit
Y<-test_data$medv
Non_biased_residual(Y,Y_esti,13)
modridge<-lm.ridge(medv~.,data=train_data,lambda=lambda)
X<-apply(as.matrix(subset(test_data,select=-medv)),2,as.numeric)
coef<-coef(modridge)
Y<-test_data$medv
un<-matrix(1,nrow=length(Y),ncol=1)
Y_esti<-cbind(un,X)%*%as.vector(coef)
Non_biased_residual(Y,Y_esti,13)
Y<-as.matrix(train_data$medv)
X<-apply(as.matrix(subset(train_data,select=-medv)),2,as.numeric)
modlasso=lars(x=X,y=Y,type="lasso")
X<-apply(as.matrix(subset(test_data,select=-medv)),2,as.numeric)
Y_esti<-predict.lars(modlasso,X,type="fit",mode="lambda",s=modlasso$lambda[which.min(modlasso$RSS)-1])
Y_esti<-Y_esti$fit
Y<-test_data$medv
Non_biased_residual(Y,Y_esti,13)
Y<-as.matrix(train_data$medv)
X<-apply(as.matrix(subset(train_data,select=-medv)),2,as.numeric)
modlasso=lars(x=X,y=Y,type="lasso")
X_test<-apply(as.matrix(subset(test_data,select=-medv)),2,as.numeric)
Y_esti<-predict.lars(modlasso,X_test,type="fit",mode="lambda",s=modlasso$lambda[which.min(modlasso$RSS)-1])
Y_esti<-Y_esti$fit
Y_test<-test_data$medv
Non_biased_residual(Y_test,Y_esti,13)
modridge<-lm.ridge(medv~.,data=train_data,lambda=seq(0,10,0.01))
lambda<-modridge$lambda[which.min(modridge$GCV)]
modridge<-lm.ridge(medv~.,data=train_data,lambda=lambda)
X_test<-apply(as.matrix(subset(test_data,select=-medv)),2,as.numeric)
coef<-coef(modridge)
Y_test<-test_data$medv
un<-matrix(1,nrow=length(Y_test),ncol=1)
Y_esti<-cbind(un,X_test)%*%as.vector(coef)
Non_biased_residual(Y_test,Y_esti,13)
Y_esti<-predict(reg,newdata=test_data)
Y_test<-test_data$medv
Non_biased_residual(Y_test,Y_esti,13)
Y<-as.matrix(train_data$medv)
X<-apply(as.matrix(subset(train_data,select=-medv)),2,as.numeric)
modlasso=lars(x=X,y=Y,type="lasso")
X_test<-apply(as.matrix(subset(test_data,select=-medv)),2,as.numeric)
Y_esti<-predict.lars(modlasso,X_test,type="fit",mode="lambda",s=modlasso$lambda[which.min(modlasso$RSS)-1])
Y_esti<-Y_esti$fit
Y_test<-test_data$medv
Non_biased_residual(Y_test,Y_esti,13)
rm(list=ls())
library(mlbench)
data(BostonHousing)
modreg<-lm(medv~.,BostonHousing)
summary(modreg)
regbackward = step(modreg, direction = 'backward')
regforward = step(lm(medv~1, data = BostonHousing), list(upper = modreg), direction = 'forward')
regbic = step(modreg, direction = 'both', k = log(nrow(BostonHousing)))
regboth = step(modreg, direction = 'both')
AIC(regforward)
AIC(regbackward)
AIC(regbic)
AIC(regboth)
reg = lm(formula(regbackward), data = BostonHousing)
summary(reg)
Y_esti<-predict(reg,BostonHousing)
Non_biased_residual<-function(Y,Y_esti,p){
sum=0
for(i in seq(1,length(Y))){
sum<-sum+(Y_esti[i]-Y[i])^2
}
NBR<- sqrt(sum/(length(Y)-p+1))
return(NBR)
}
Non_biased_residual(Y,Y_esti,13)
reg = lm(formula(regbackward), data = BostonHousing)
summary(reg)
Y_esti<-predict(reg,BostonHousing)
Y<-BostonHousing$medv
Non_biased_residual<-function(Y,Y_esti,p){
sum=0
for(i in seq(1,length(Y))){
sum<-sum+(Y_esti[i]-Y[i])^2
}
NBR<- sqrt(sum/(length(Y)-p+1))
return(NBR)
}
Non_biased_residual(Y,Y_esti,13)
Y<-as.matrix(BostonHousing$medv)
X<-apply(as.matrix(subset(BostonHousing,select=-medv)),2,as.numeric)
modlasso=lars(x=X,y=Y,type="lasso")
plot(modlasso)
plot(modlasso$lambda)
modlasso$lambda[which.min(modlasso$RSS)-1]
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=seq(0,10,0.01))
plot(modridge)
abline(v=lambda)
lambda<-modridge$lambda[which.min(modridge$GCV)]
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=seq(0,10,0.01))
plot(modridge)
abline(v=lambda)
plot(x=seq(0,10,0.01),modridge$GCV,xlab = "lambda")
abline(v=lambda)
modridge<-lm.ridge(medv~.,data=BostonHousing,lambda=lambda)
coef<-coef(modridge)
coef
un<-matrix(1,nrow=length(Y),ncol=1)
Y_esti<-cbind(un,X)%*%as.vector(coef)
Non_biased_residual(Y,Y_esti,13)
Y<-as.matrix(BostonHousing$medv)
X<-apply(as.matrix(subset(BostonHousing,select=-medv)),2,as.numeric)
modlasso=lars(x=X,y=Y,type="lasso")
plot(modlasso)
plot(modlasso$lambda)
library(lars)
Y<-as.matrix(BostonHousing$medv)
X<-apply(as.matrix(subset(BostonHousing,select=-medv)),2,as.numeric)
modlasso=lars(x=X,y=Y,type="lasso")
plot(modlasso)
plot(modlasso$lambda)
