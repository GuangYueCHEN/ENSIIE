u2 <- 2*runif(1,0,1) -1
while(u1*u1 + u2*u2 > 1) {
u1 <- 2*runif(1,0,1) -1
u2 <- 2*runif(1,0,1) -1
}
U1 <- c(U1,u1)
U2 <- c(U2,u2)
}
return(data.frame(U1,U2))
}
exo6 <- six(10000)
plot3 <- ggplot(exo6,aes(x = exo6$U1,y=exo6$U2)) + geom_point() +
xlab("U1") + ylab("U2")
plot3
R <- rexp(1,rate=0.5)
THETA <- runif(1,0,2*3.14)
for (i in 1:9999) {
R <- c(R,rexp(1,rate=0.5))
THETA <- c(THETA,runif(1,0,2*3.14))
}
X1 = vector("numeric",10000)
X2 = vector("numeric",10000)
for (i in 1:10000) {
X1[i] = R[i] * cos(THETA[i])
X2[i] = R[i] * sin(THETA[i])
}
DF4 <- data.frame(X1,X2)
plot4 <- ggplot(DF4,aes(x = DF4$X1,y=DF4$X2)) + geom_point() + xlab("X1") + ylab("X2")
plot4
DF5 <- data.frame(X1,y)
plot5 <- ggplot(DF5,aes(x=DF5$X1)) + geom_histogram(aes(y=..density..),fill = "red", alpha = 0.2) +
geom_line(aes(x=ab, y=DF5$y)) + xlab("Variable X1 simulée")
plot5
DF5 <- data.frame(X1,y)
plot5 <- ggplot(DF5,aes(x=DF5$X1)) + geom_histogram(aes(y=..density..),fill = "red", alpha = 0.2) +
geom_line(aes(x=ab, y=DF5$y)) + xlab("Variable X1 simulée")
plot5
DF5 <- data.frame(X1,y)
plot5 <- ggplot(DF5,aes(x=DF5$X1)) + geom_histogram(aes(y=..density..),fill = "red", alpha = 0.2) +
geom_line(aes(x=ab, y=DF5$y)) + xlab("Variable X1 simulée")
plot5
sigma11 <- 0
sigma12 <- 1
sigma21 <- 3
sigma22 <- 1
sigma1 <- sqrt(sigma11*sigma11 + sigma12*sigma12)
sigma2 <- sqrt(sigma21*sigma21 + sigma22*sigma22)
Z1 <- 2 + sigma11*X1 + sigma12 * X2
Z2 <- 4 + sigma21 * X1 + sigma22 * X2
DF6 <- data.frame(Z1,Z2)
plot6 <- ggplot(DF6,aes(x = DF6$Z1,y=DF6$Z2)) + geom_point() + xlab("Z1") + ylab("Z2")
plot6
sigma11 <- 0
sigma12 <- 1
sigma21 <- 2
sigma22 <- 0
sigma1 <- sqrt(sigma11*sigma11 + sigma12*sigma12)
sigma2 <- sqrt(sigma21*sigma21 + sigma22*sigma22)
Z1 <- 2 + sigma11*X1 + sigma12 * X2
Z2 <- 4 + sigma21 * X1 + sigma22 * X2
DF7 <- data.frame(Z1,Z2)
plot7 <- ggplot(DF7,aes(x = DF7$Z1,y=DF7$Z2)) + geom_point() + xlab("Z1") + ylab("Z2")
plot7
sigma11 <- 4
sigma12 <- 1/0.225
sigma21 <- 0
sigma22 <- 1
sigma1 <- sqrt(sigma11*sigma11 + sigma12*sigma12)
sigma2 <- sqrt(sigma21*sigma21 + sigma22*sigma22)
Z1 <- 2 + sigma11*X1 + sigma12 * X2
Z2 <- 4 + sigma21 * X1 + sigma22 * X2
DF8 <- data.frame(Z1,Z2)
plot8 <- ggplot(DF8,aes(x = DF8$Z1,y=DF8$Z2)) + geom_point() + xlab("Z1") + ylab("Z2")
plot8
ab <- -6
current = ab + 1/1000
for(i in 1:9999) {
ab <- c(ab, current)
current = current + 1.2/1000
}
y1 <- vector("numeric", 10000)
for (i in 1:10000) {
y1[i] = 0.5 * dnorm(ab[i],mean=-3,sd=1) + 0.5 * dnorm(ab[i],mean=3,sd=1)
}
DF9 <- data.frame(ab,y1)
plot9 <- ggplot(DF9,aes(x = DF9$ab,y=DF9$y1)) +
geom_point() + xlab("x") + ylab("f(x)")
plot9
exo7 <- function(p1) {
mu <- runif(1,0,1)
if(mu < p1) {
R <- rexp(1,rate=0.5)
TETA <- runif(1,0,2*3.14)
X <- -3 + sqrt(R) * cos(TETA)
}
else {
R <- rexp(1,rate=0.5)
TETA <- runif(1,0,2*3.14)
X <- 3 + sqrt(R) * cos(TETA)
}
for (i in 1:9999) {
mu <- runif(1,0,1)
if(mu < p1) {
R <- rexp(1,rate=0.5)
TETA <- runif(1,0,2*3.14)
X <- c(X,-3 + sqrt(R) * cos(TETA))
}
else {
R <- rexp(1,rate=0.5)
TETA <- runif(1,0,2*3.14)
X <-c(X,3 + sqrt(R) * cos(TETA))
}
}
return(X)
}
DF12 <- data.frame(exo7(0.5),y1)
plot12 <- ggplot(DF12,aes(x=DF12$exo7.0.5.)) + geom_histogram(aes(y=..density..),fill = "red", alpha = 0.2) +
geom_line(aes(x=ab, y=DF12$y1)) + xlab("Variable X simulée pour p=(1/2,1/2)")
plot12
DF13 <- data.frame(exo7(0.25),y2)
exo7 <- function(p1) {
mu <- runif(1,0,1)
if(mu < p1) {
R <- rexp(1,rate=0.5)
TETA <- runif(1,0,2*3.14)
X <- -3 + sqrt(R) * cos(TETA)
}
else {
R <- rexp(1,rate=0.5)
TETA <- runif(1,0,2*3.14)
X <- 3 + sqrt(R) * cos(TETA)
}
for (i in 1:9999) {
mu <- runif(1,0,1)
if(mu < p1) {
R <- rexp(1,rate=0.5)
TETA <- runif(1,0,2*3.14)
X <- c(X,-3 + sqrt(R) * cos(TETA))
}
else {
R <- rexp(1,rate=0.5)
TETA <- runif(1,0,2*3.14)
X <-c(X,3 + sqrt(R) * cos(TETA))
}
}
return(X)
}
DF12 <- data.frame(exo7(0.5),y1)
plot12 <- ggplot(DF12,aes(x=DF12$exo7.0.5.)) + geom_histogram(aes(y=..density..),fill = "red", alpha = 0.2) +
geom_line(aes(x=ab, y=DF12$y1)) + xlab("Variable X simulée pour p=(1/2,1/2)")
plot12
DF13 <- data.frame(exo7(0.25),y2)
ab <- -6
current = ab + 1/1000
for(i in 1:9999) {
ab <- c(ab, current)
current = current + 1.2/1000
}
y2 <- vector("numeric", 10000)
for (i in 1:10000) {
y2[i] = 0.25 * dnorm(ab[i],mean=-3,sd=1) + 0.75 * dnorm(ab[i],mean=3,sd=1)
}
DF10 <- data.frame(ab,y2)
plot10 <- ggplot(DF10,aes(x = DF10$ab,y=DF10$y2)) + geom_point() + xlab("x") + ylab("f(x)")
plot10
ab <- -6
current = ab + 1/1000
for(i in 1:9999) {
ab <- c(ab, current)
current = current + 1.2/1000
}
y3 <- vector("numeric", 10000)
for (i in 1:10000) {
y3[i] = 0.75 * dnorm(ab[i],mean=-3,sd=1) + 0.25 * dnorm(ab[i],mean=3,sd=1)
}
DF11 <- data.frame(ab,y3)
plot11<- ggplot(DF11,aes(x = DF11$ab,y=DF11$y3)) + geom_point() + xlab("x") + ylab("f(x)")
plot11
exo7 <- function(p1) {
mu <- runif(1,0,1)
if(mu < p1) {
R <- rexp(1,rate=0.5)
TETA <- runif(1,0,2*3.14)
X <- -3 + sqrt(R) * cos(TETA)
}
else {
R <- rexp(1,rate=0.5)
TETA <- runif(1,0,2*3.14)
X <- 3 + sqrt(R) * cos(TETA)
}
for (i in 1:9999) {
mu <- runif(1,0,1)
if(mu < p1) {
R <- rexp(1,rate=0.5)
TETA <- runif(1,0,2*3.14)
X <- c(X,-3 + sqrt(R) * cos(TETA))
}
else {
R <- rexp(1,rate=0.5)
TETA <- runif(1,0,2*3.14)
X <-c(X,3 + sqrt(R) * cos(TETA))
}
}
return(X)
}
DF12 <- data.frame(exo7(0.5),y1)
plot12 <- ggplot(DF12,aes(x=DF12$exo7.0.5.)) + geom_histogram(aes(y=..density..),fill = "red", alpha = 0.2) +
geom_line(aes(x=ab, y=DF12$y1)) + xlab("Variable X simulée pour p=(1/2,1/2)")
plot12
DF13 <- data.frame(exo7(0.25),y2)
plot13 <- ggplot(DF13,aes(x=DF13$exo7.0.25.)) + geom_histogram(aes(y=..density..),fill = "blue", alpha = 0.2) +
geom_line(aes(x=ab, y=DF13$y2)) + xlab("Variable X simulée pour p=(1/4,3/4)")
plot13
DF14 <- data.frame(exo7(0.75),y3)
plot14 <- ggplot(DF14,aes(x=DF14$exo7.0.75.)) + geom_histogram(aes(y=..density..),fill = "green", alpha = 0.2) +
geom_line(aes(x=ab, y=DF14$y3)) + xlab("Variable X simulée pour p=(3/4,1/4)")
plot14
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
graphics.off()
library(ggplot2)
create_group <- function(N) {
c <- (1/N)
P <- rep(c, N)#repeat c for N times
C <- vector("numeric", N)
C[1] = c
for (i in 2:N) {
c = c + P[i]
C[i] = c
}
return(C)
}
X1 <- as.numeric(1:100)
P1 <- rep(1/100,100)
C1 <- create_group(100)
simu <- function(X,C,p) {
k <- 1
u <- runif(1,0,1)
while(u>C[k]) {
k <- k+1
}
return(as.numeric(k <= (p*100)))
}
Simu1 <- simu(X1,C1,0.3)
for(i in 1:99) {
Simu1 <- c(Simu1, simu(X1,C1,0.3))
}
Q1 <- Simu1
Q1
knitr::opts_chunk$set(echo = TRUE)
simu<-function(p,N){
B<-vector("numeric",N)
for(i in 1:N){
u<-runif(1,0,1)
if(u<1-p){
B[i]=0
}else{
B[i]=1
}
}
return(B)
}
B<-simu(0.3,100)
sum(B)/100
simu<-function(p,N){
B<-vector("numeric",N)
for(i in 1:N){
u<-runif(1,0,1)
if(u<1-p){
B[i]=0
}else{
B[i]=1
}
}
return(B)
}
B<-simu(0.3,100)
sum(B)/100
simu<-function(p,N){
B<-vector("numeric",N)
for(i in 1:N){
u<-runif(1,0,1)
if(u<1-p){
B[i]=0
}else{
B[i]=1
}
}
return(B)
}
B<-simu(0.3,100)
sum(B)/100
simu<-function(p,N){
B<-vector("numeric",N)
for(i in 1:N){
u<-runif(1,0,1)
if(u<1-p){
B[i]=0
}else{
B[i]=1
}
}
return(B)
}
B<-simu(0.3,100)
sum(B)/100
simu<-function(p,N){
B<-vector("numeric",N)
for(i in 1:N){
u<-runif(1,0,1)
if(u<1-p){
B[i]=0
}else{
B[i]=1
}
}
return(B)
}
B<-simu(0.3,100)
sum(B)/100
simu<-function(p,N){
B<-vector("numeric",N)
for(i in 1:N){
u<-runif(1,0,1)
if(u<1-p){
B[i]=0
}else{
B[i]=1
}
}
return(B)
}
B<-simu(0.3,100)
sum(B)/100
X1 <- as.numeric(1:100)
P1 <- rep(1/100,100)
C1 <- create_group(100)
simu <- function(X,C,p) {
k <- 1
u <- runif(1,0,1)
while(u>C[k]) {
k <- k+1
}
return(as.numeric(k <= (p*100)))
}
Simu1 <- simu(X1,C1,0.3)
for(i in 1:99) {
Simu1 <- c(Simu1, simu(X1,C1,0.3))
}
Q1 <- Simu1
Q1
TCL <- function(n,simu,p) {
Xn <- sum(simu) / n
return((sqrt(n)*(Xn-p))/(sqrt(p*(1-p))))
}
creat_echan<-function(N,n,p){
Z<-TCL(n,simu(p,n),p)
N=N-1
for(i in 1:N){
Z<-c(Z,TCL(n,simu(p,n),p))
}
return(Z)
}
creat_echan(10,10,0.3)
simu<-function(p,N){
B<-vector("numeric",N)
for(i in 1:N){
u<-runif(1,0,1)
if(u<1-p){
B[i]=0
}else{
B[i]=1
}
}
return(B)
}
B<-simu(0.3,100)
sum(B)/100
TCL <- function(n,simu,p) {
Xn <- sum(simu) / n
return((sqrt(n)*(Xn-p))/(sqrt(p*(1-p))))
}
creat_echan<-function(N,n,p){
Z<-TCL(n,simu(p,n),p)
N=N-1
for(i in 1:N){
Z<-c(Z,TCL(n,simu(p,n),p))
}
return(Z)
}
creat_echan(10,10,0.3)
creat_echan(10,30,0.3)
creat_echan(10,40,0.3)
n=30
p=0.1
binom<-function (p,n){
U<-runif(n,0,1)
X<-U<1-p
return (sum(1-as.numeric(X)))
}
runif(1,0,1)
-log(0.3733174)
knitr::opts_chunk$set(echo = TRUE)
six <- function(N) {
u1 <- 2*runif(1,0,1) -1
u2 <- 2*runif(1,0,1) -1
while(u1*u1 + u2*u2 > 1) {
u1 <- 2*runif(1,0,1) -1
u2 <- 2*runif(1,0,1) -1
}
U1 <- u1
U2 <- u2
for (i in 1:(N-1)) {
u1 <- 2*runif(1,0,1) -1
u2 <- 2*runif(1,0,1) -1
while(u1*u1 + u2*u2 > 1) {
u1 <- 2*runif(1,0,1) -1
u2 <- 2*runif(1,0,1) -1
}
U1 <- c(U1,u1)
U2 <- c(U2,u2)
}
return(data.frame(U1,U2))
}
exo6 <- six(10000)
plot3 <- ggplot(exo6,aes(x = exo6$U1,y=exo6$U2)) + geom_point() +
xlab("U1") + ylab("U2")
plot3
R <- rexp(1,rate=0.5)
THETA <- runif(1,0,2*3.14)
for (i in 1:9999) {
R <- c(R,rexp(1,rate=0.5))
THETA <- c(THETA,runif(1,0,2*3.14))
}
X1 = vector("numeric",10000)
X2 = vector("numeric",10000)
for (i in 1:10000) {
X1[i] = R[i] * cos(THETA[i])
X2[i] = R[i] * sin(THETA[i])
}
DF4 <- data.frame(X1,X2)
plot4 <- ggplot(DF4,aes(x = DF4$X1,y=DF4$X2)) + geom_point() + xlab("X1") + ylab("X2")
plot4
rexp(1,rate=0.5)
DF5 <- data.frame(X1,y)
ab <- -6
current = ab + 1/1000
for(i in 1:9999) {
ab <- c(ab, current)
current = current + 1.2/1000
}
y1 <- vector("numeric", 10000)
for (i in 1:10000) {
y1[i] = 0.5 * dnorm(ab[i],mean=-3,sd=1) + 0.5 * dnorm(ab[i],mean=3,sd=1)
}
DF9 <- data.frame(ab,y1)
plot9 <- ggplot(DF9,aes(x = DF9$ab,y=DF9$y1)) +
geom_point() + xlab("x") + ylab("f(x)")
plot9
sigma11 <- 0
sigma12 <- 1
sigma21 <- 2
sigma22 <- 0
sigma1 <- sqrt(sigma11*sigma11 + sigma12*sigma12)
sigma2 <- sqrt(sigma21*sigma21 + sigma22*sigma22)
Z1 <- 2 + sigma11*X1 + sigma12 * X2
Z2 <- 4 + sigma21 * X1 + sigma22 * X2
DF7 <- data.frame(Z1,Z2)
plot7 <- ggplot(DF7,aes(x = DF7$Z1,y=DF7$Z2)) + geom_point() + xlab("Z1") + ylab("Z2")
plot7
knitr::opts_chunk$set(echo = TRUE)
simuY<-function(){
X=c(0,1)
P=c(5/6,1/6)
C<-c(P[1])
C<-c(C,C[1]+P[2])
k<-1
u<-runif(1,0,1)
while(u>C[k]){
k<-k+1
}
return (X[k])
}
N=1000
echantillonY=c()
for (i in 1:1000){
echantillonY<-c(echantillonY,simuY())
}
dat <- data.frame(echantillonY)
plot1 <- ggplot(dat,aes(x=dat$echantillonY)) + geom_histogram(fill = "darkorchid", alpha = 0.2) + xlab("Echantillon")
plot1
simuX<-function(){
X=c(-1,0,1)
P=c(1/3,1/6,1/2)
C<-c(P[1])
C<-c(C,C[1]+P[2])
C<-c(C,C[2]+P[3])
k<-1
u<-runif(1,0,1)
while(u>C[k]){
k<-k+1
}
return (X[k])
}
N=1000
echantillonX=c()
for (i in 1:1000){
echantillonX<-c(echantillonX,simuX())
}
dat2 <- data.frame(echantillonX)
plot2 <- ggplot(dat2,aes(x=dat2$echantillonX))+ geom_histogram(fill = "darkorchid", alpha = 0.2) + xlab("Echantillon")
plot2
