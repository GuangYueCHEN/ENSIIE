package listes;

import java.util.Iterator;

public class Liste<E> implements IListe<E> {
	
	
	protected Maillon<E> tete = null;
	//un constructeur par d√©fault
	public Liste (){
		tete = null;
	}
	public Liste(Liste<E> l)
	{
		this();
		for(E elt:l)
		{
			add(elt);
		}
	}
	
	//public void finalize(){}
	

	@Override
	public void add(E elt) throws NullPointerException {
		// TODO Auto-generated method stub
		if(elt != null)
		{
			if(tete == null)
				{
				tete = new Maillon<E> (elt);
				}
			else {
				Maillon <E> p;
				for(p = tete;p.next!=null;p = p.next)
				{
					p.next = new Maillon<E>(elt);
				}
			}
		
		}
		else
		{
			throws new NUllPointerException("liste:add(null)");
		}
	}

	@Override
	public void insert(E elt) throws NullPointerException {
		// TODO Auto-generated method stub

	}

	@Override
	public boolean insert(E elt, int index) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public Iterator<E> iterator() {
		// TODO Auto-generated method stub
		return null;
	}

	private static class Maillon<E>
	{
		public E data;
		public Maillon<E> next;
		public Maillon(E e){
			data = e;
			next = null;
		}
		
		
		
	}
	
	private class ListeIterator<F> implements Iterator<F>
	{
 
		public Maillon<F> current = null;
		public F element;
		public boolean nextCalled;
		public Maillon<F> last = null;
		public Maillon<F> penultimate = null;
		
		
		
		public ListeIterator(){
			
			
			
		}
		@Override
		public void remove() {
			// TODO Auto-generated method stub
			Iterator.super.remove();
		}
		
		@Override
		public boolean hasNext() {
			// TODO Auto-generated method stub
			
			
			return false;
		}

		@Override
		public F next() {
			// TODO Auto-generated method stub
			
			return null;
		}
		
		
		
	}
}
